[package]
name = "xcp_lite"
version = "0.3.0"
edition = "2024"
resolver = "2"
rust-version = "1.85.0"
authors = ["RainerZ"]
description = "Measurement and Calibration for Rust with XCP, based on XCPlite"
readme = "README.md"
keywords = ["XCP","Rust","Vector","ASAM","CANape","A2L"]
license = "MIT OR Apache-2.0"
homepage = "https://vector.com"
repository = "https://github.com/vectorgrp/xcp-lite"
categories = ["MC"]

[workspace]
members = [
    "xcp_client",  
    "examples/hello_xcp",
    "examples/calibration_demo",      
    "examples/struct_measurement_demo",    
    "examples/single_thread_demo",
    "examples/multi_thread_demo",
    "examples/point_cloud_demo",
    "examples/rayon_demo",
    "examples/tokio_demo",
   
]

[workspace.package]
version = "0.3.0"


#--------------------------------------------------------------------------------------

[[example]]
name = "xcp_client"
path = "xcp_client/src/main.rs"

[[example]]
name = "hello_xcp"
path = "examples/hello_xcp/src/main.rs"

[[example]]
name = "calibration_demo"
path = "examples/calibration_demo/src/main.rs"

[[example]]
name = "struct_measurement_demo"
path = "examples/struct_measurement_demo/src/main.rs"

[[example]]
name = "single_thread_demo"
path = "examples/single_thread_demo/src/main.rs"

[[example]]
name = "multi_thread_demo"
path = "examples/multi_thread_demo/src/main.rs"

[[example]]
name = "rayon_demo"
path = "examples/rayon_demo/src/main.rs"

[[example]]
name = "tokio_demo"
path = "examples/tokio_demo/src/main.rs"

[[example]]
name = "point_cloud_demo"
path = "examples/point_cloud_demo/src/main.rs"




#--------------------------------------------------------------------------------------
[features]


#default = ["a2l_reader"] 

# Feature a2l_reader using a2lfile
# Automatic check of the generated A2L file
a2l_reader = ["dep:a2lfile"]


#--------------------------------------------------------------------------------------

[dependencies]

# Error handling
thiserror = "1.0.64"
#thiserror = "2.0"

# Command line parser
clap = { version = "4.5.9", features = ["derive"] }

# A macro to generate structures which behave like bitflags
bitflags = "2.6.0"

# Logging
log = "0.4.21"
env_logger = "0.11.3"

# Alloc stats
stats_alloc = "0.1.10"

# Collects build-information of your Rust crate, used to generate EPK
build-info = "0.0.40"

# A macro for declaring lazily evaluated statics
lazy_static = "1.4"

# Single assignment cells
once_cell = "1.19.0"
static_cell = "2.1.0"

# More compact and efficient implementations of the standard synchronization primitives
parking_lot = "0.12.3"

# Regular expression matching for registry object search
regex = "1.11.1"

# A generic serialization/deserialization framework
# Used to handle json parameter files (optional)
serde = "1.0"
serde_json =  "1.0"  

# proc-macro A2L serializer for structs
xcp_type_description  = { path = "./xcp_type_description/"}
xcp_type_description_derive = { path = "./xcp_type_description/xcp_type_description_derive/" }

# proc-macro CDR IDL generator for structs
xcp_idl_generator  = { path = "./xcp_idl_generator/"}
xcp_idl_generator_derive  = { path = "./xcp_idl_generator/xcp_idl_generator_derive/"}

# A2L checker (optional)
a2lfile = { version="3.0.0", optional = true}

#--------------------------------------------------------------------------------------

[dev-dependencies]

anyhow = "1.0"
rand = "0.9"

# Alloc stats
stats_alloc = "0.1.10"


# XCP test client
bytes = "1.6.0"
byteorder = "1.5.0"
regex = "1.11.1"
tokio = { version = "1.37.0", features = ["full"] }
xcp_client = { path = "xcp_client" }

# A2L checker (optional)
a2lfile = { version="3.0.0", optional = false}

# dependencies for point_cloud demo example
cdr = "0.2.4"

# dependencies for rayon demo example
rayon = "1.10.0"
num = "0.4.3"
image = "0.25.2"
num_cpus = "1.16.0"



[build-dependencies]
cc = "1.0"
build-info-build = "0.0.40"
bindgen = "0.71.1"


[profile.dev.package."*"]
debug = false
opt-level = 3

[profile.dev]
# panic = 'abort'
# lto = true
debug = true
opt-level = 2

[profile.release]
panic = 'abort'
debug = true
lto = true
opt-level = 3
